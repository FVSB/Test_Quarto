{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "#title: \"Defensa de la tesis \\n Universidad de la Habana\"\n",
        "\n",
        "#author: Francisco Vicente Suárez Bellón\n",
        "image: true\n",
        "     \n",
        "title-slide-attributes:\n",
        "  data-background-image: 'https://marp.app/assets/hero-background.jpg'\n",
        "  data-background-size: cover\n",
        "  data-background-opacity: 0,8\n",
        "  data-text-align: center\n",
        "css: styles.css\n",
        "jupyter: python3\n",
        "\n",
        "format:\n",
        "  revealjs:\n",
        "    progress: true\n",
        "    include-after-body: scripts.js\n",
        "    navigationMode: \"linear\" \n",
        "    slide-number: h.v\n",
        "    show-slide-number: all\n",
        "    multiplex: \n",
        "     id: bee0529b373465ac\n",
        "     secret: \"17396952050292487494\"\n",
        "    theme: sky\n",
        "    css:  [styles.css]\n",
        "    raw-html: true   # <-- Habilita la renderización de HTML sin escape\n",
        "    incremental: true  \n",
        "    header: \"Universidad de La Habana - Facultad de Matemática y Computación\"\n",
        "    footer: \"Francisco Vicente Suárez Bellón | Tesis de Licenciatura en Ciencia de la Computación\"\n",
        "---\n",
        "\n",
        "\n",
        "#\n",
        "\n",
        "<!-- Slide Personalizado -->\n",
        "<div class=\"custom-title-slide\">\n",
        "<div class=\"logo\">\n",
        "<img src=\"https://github.com/FVSB/test_backUp/blob/main/Uh_Logo.png?raw=true\" alt=\"Logo Universidad\" style=\"width: 150px;\">\n",
        "</div>\n",
        "<div class=\"content\">\n",
        "<h2 >Facultad de Matemática y Computación</h2>\n",
        "<p ><strong>Autor:</strong> Francisco Vicente Suárez Bellón</p>\n",
        "<p ><strong>Tutor:</strong> Dr. C. Gemayqzel Bouza Allende</p>\n",
        "<p ><strong>Tesis de Licenciatura en Ciencias de la Computación</strong></p>\n",
        "</div>\n",
        "</div>\n",
        "\n",
        "<script> \n",
        "Reveal.on('fragmentshown', function(event) {\n",
        "    let customSlide = event.currentSlide.querySelector('.custom-title-slide');\n",
        "\n",
        "    if (customSlide) {\n",
        "        let visibleFragments = customSlide.querySelectorAll('.fragment.visible');\n",
        "        \n",
        "        // Si hay al menos 2 elementos mostrados, elimina el anterior del DOM\n",
        "        if (visibleFragments.length > 1) {\n",
        "            let previousElement = visibleFragments[visibleFragments.length - 2];\n",
        "            previousElement.remove(); // Elimina completamente el elemento del DOM\n",
        "        }\n",
        "    }\n",
        "});\n",
        "\n",
        "\n",
        "</script>\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "#\n",
        "\n",
        "<!-- Slide Personalizado -->\n",
        "<div class=\"custom-title-slide\">\n",
        "<div class=\"logo\">\n",
        "<img src=\"https://github.com/FVSB/test_backUp/blob/main/Uh_Logo.png?raw=true\" alt=\"Logo Universidad\" style=\"width: 150px;\">\n",
        "</div>\n",
        "<div class=\"content\">\n",
        "\n",
        "<h2 >Un generador de problemas prueba para evaluar<br> la calidad de la solución de los algoritmos<br> de problemas de optimización de dos niveles</h2>\n",
        "<p ><strong>Autor:</strong> Francisco Vicente Suárez Bellón</p>\n",
        "<p ><strong>Tutor:</strong> Dr. C. Gemayqzel Bouza Allende</p>\n",
        "<p ><strong>Tesis de Licenciatura en Ciencias de la Computación</strong></p>\n",
        "</div>\n",
        "</div>\n",
        "\n",
        "<script> \n",
        "Reveal.on('fragmentshown', function(event) {\n",
        "    let customSlide = event.currentSlide.querySelector('.custom-title-slide');\n",
        "\n",
        "    if (customSlide) {\n",
        "        let visibleFragments = customSlide.querySelectorAll('.fragment.visible');\n",
        "        \n",
        "        // Si hay al menos 2 elementos mostrados, elimina el anterior del DOM\n",
        "        if (visibleFragments.length > 1) {\n",
        "            let previousElement = visibleFragments[visibleFragments.length - 2];\n",
        "            previousElement.remove(); // Elimina completamente el elemento del DOM\n",
        "        }\n",
        "    }\n",
        "});\n",
        "\n",
        "\n",
        "</script>\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "## Índice\n",
        "\n",
        "::: {.nonincremental}\n",
        "1. Introducción\n",
        "2. Objetivos\n",
        "3. Marco Teórico\n",
        "5. Resultados\n",
        "6. Conclusiones y Trabajo Futuro\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "# 1. Introducción\n",
        "::: {.indicator}\n",
        "- **Contexto**: Optimización binivel como herramienta clave en investigación operativa y teoría de juegos.\n",
        "- **Problema**: Dificultad inherente en resolver problemas binivel debido a su naturaleza jerárquica y no convexa.\n",
        "- **Contribución**: Generador de problemas con puntos estacionarios específicos para evaluar algoritmos MPEC.\n",
        ":::\n",
        "\n",
        "---\n",
        "\n",
        "## Principales usos de los problemas binivel en la literatura:\n",
        "\n",
        "- Mercado Eléctrico (Aussel 2018)\n",
        "- Ecoparques industriales (Ramos 2016)\n",
        "- Ajuste de hiperparámetros en entrenamiento de redes neuronales (Dempe 2020)\n",
        "\n",
        "---\n",
        "\n",
        "## Los problemas binivel  son complejos computacionalmente:\n",
        "\n",
        "-  *NP-Hard* (Dempe 2020)\n",
        "- *ΣP2-hard* (Cerulli 2016)\n",
        "\n",
        "\n",
        "# 2. Objetivos\n",
        "\n",
        "---\n",
        "\n",
        "::: {.nonincremental}\n",
        "- **Objetivo General**:\n",
        "  - Desarrollar un generador de problemas binivel que permita estudiar el comportamiento de algoritmos conocidos.\n",
        ":::\n",
        "- **Objetivos Específicos**:\n",
        "  - Garantizar la factibilidad y estacionariedad en puntos dados.\n",
        "  - Evaluar el desempeño de algoritmos en problemas modificados.\n",
        "  - Analizar resultados experimentales en problemas lineales, cuadráticos y no convexos.\n",
        "\n",
        "\n",
        "\n",
        "# 3. Marco Teórico\n",
        "\n",
        "---\n",
        "\n",
        "### Problema de Optimización Binivel\n",
        "\n",
        "El problema general de optimización binivel se define como:\n",
        "\n",
        "$$\n",
        "\\DeclareMathOperator*{\\argmin}{argmin} % Define el operador argmin\n",
        "\\begin{equation}\n",
        "\\begin{aligned}\n",
        "& \\min_{x} \\; F(x, y) \\\\\n",
        "& \\text{sujeto a } \\\\\n",
        "& g_i(x, y)\\leq 0,\\;i=1,\\ldots,q, \\\\\n",
        "& y \\in \\argmin_{y} \\left\\{ f(x, y) \\mid v_j(x, y)\\leq 0,\\;j=1,\\ldots,q \\right\\}\n",
        "\\end{aligned}\n",
        "\\end{equation}\n",
        "$$\n",
        "\n",
        "---\n",
        "\n",
        "## Donde:\n",
        "\n",
        "- $x \\in R^{n},\\; y \\in R^{m}$\n",
        "- $F(x,y) : \\mathbb{R}^{n} \\times \\mathbb{R}^{m} \\to \\mathbb{R}$\n",
        "  - $g_i(x,y)  : \\mathbb{R}^{n} \\times \\mathbb{R}^{m} \\to \\mathbb{R} ,$, $i=1,\\ldots, q$\n",
        "- $f(x,y) : \\mathbb{R}^{n} \\times \\mathbb{R}^{m} \\to \\mathbb{R},$\n",
        "  - $v_j(x,y)  : \\mathbb{R}^{n} \\times \\mathbb{R}^{m} \\to \\mathbb{R} ,$ $j=1,\\ldots, s$\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "### Transformación KKT\n",
        "\n",
        "Reemplazando el problema del nivel inferior por sus condiciones KKT, obtenemos:\n",
        "\n",
        "$$\n",
        "\\begin{aligned}\n",
        "\\min_{x, y, \\lambda_j} & \\quad F(x, y) \\\\\n",
        "\\text{s.a.} & \\quad g_i(x, y) \\leq 0, \\quad i = 1, \\dots, q, \\\\\n",
        "& \\quad \\nabla_y f(x, y) + \\sum_{j=1}^s \\nabla_y v_j(x, y) \\lambda_j = 0, \\\\\n",
        "& \\quad v_j(x, y) \\leq 0, \\quad j = 1, \\dots, s, \\\\\n",
        "& \\quad \\lambda_j \\geq 0, \\quad j = 1, \\dots, s, \\\\\n",
        "& \\quad v_j(x, y) \\lambda_j = 0, \\quad j = 1, \\dots, s.\n",
        "\\end{aligned}\n",
        "$$\n",
        "\n",
        "---\n",
        "\n",
        "### Tipos de Puntos Estacionarios\n",
        "\n",
        "\n",
        "- **C-Estacionario**:\n",
        "\n",
        "- **M-Estacionario**:\n",
        "\n",
        "\n",
        "- **Fuertemente Estacionario**:\n",
        "\n",
        "### Valores del Multiplicador   alpha\n",
        "- $$\\alpha=0  $$\n",
        "- $$\\alpha \\neq 0$$\n",
        "  \n",
        " \n",
        "\n",
        "---\n",
        "\n",
        "# 4. Metodología\n",
        "\n",
        "---\n",
        "\n",
        "### Fases del Proceso\n",
        "\n",
        "1. Seleccionar del ambiente computacional\n",
        "2. Crear un generador de problemas pruebas\n",
        "3. Experimentar con problemas prueba\n",
        "4. Analizar los resultados\n",
        "\n",
        "---\n",
        "\n",
        "## Seleccionar un ambiente computacional\n",
        "\n",
        "- Lenguaje de programación:\n",
        "  1. Rápido y eficiente computacionalmente.\n",
        "  2. Fácil de utilizar en ambientes matemáticos.\n",
        "  3. Bibliotecas para optimización no lineal y binivel.\n",
        "\n",
        "--- \n",
        "\n",
        "## Generador del problema\n",
        "\n",
        "- Entrada:\n",
        "  1. Un problema de optimización binivel\n",
        "  2. Un punto, el cual se desea que dicho problema sea estacionario\n",
        "  3. Elección del tipo de la clase de estacionariedad seleccionada.\n",
        "\n",
        "- Salida: \n",
        "  1. Problema perturbado donde el punto seleccionado es estacionario de la clase seleccionada\n",
        "\n",
        "---\n",
        "\n",
        "## Experimentar con problemas prueba\n",
        "\n",
        "- Selección de problemas con estructura variada \n",
        " 1. Lineales\n",
        " 2. Cuadráticos\n",
        " 3. No Convexos\n",
        "\n",
        "- Generación de problemas perturbados en cada clase de estacionariedad \n",
        "\n",
        "- Analizar los puntos óptimos que el ambiente computacional halla de cada problema perturbado.\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "# 5. Resultados\n",
        "\n",
        "--- \n",
        "\n",
        "### Ambiente Computacional:\n",
        "- Lenguaje de programación: \n",
        "  1. **Julia**\n",
        "- Bibliotecas:\n",
        "  1. Symbolics \n",
        "  2. LinearAlgebra\n",
        "\n",
        "- Bibliotecas para hallar óptimos:\n",
        "  1. BilevelJuMP\n",
        "  2. JuMP\n",
        "\n",
        "---\n",
        "\n",
        "### Generador de problemas Binivel \n",
        "**Dado**:\n",
        "- Problema de optimización binivel\n",
        "  1. Conjunto de índices activos.\n",
        "- Punto a requerir a ser estacionario.\n",
        "  1. Conocer el tipo de estacionariedad requerida.\n",
        "\n",
        "\n",
        "--- \n",
        "\n",
        "#### Pasos para la generación\n",
        "1. Transformaciones:\n",
        "  - Restricciones activas del nivel inferior y hacer factibles.\n",
        "  - Hallar el kkt del nivel inferior y modificar la función objetivo del nivel inferior.\n",
        "  - Garantizar la factibilidad del punto.\n",
        "  - Realizar el KKT del MPEC y posteriormente modificar la función objetivo del Líder.\n",
        "\n",
        "---\n",
        "\n",
        "### Transformaciones en el nivel inferior:\n",
        "- Las restricciones activas : \n",
        "$$\\hat{v_j}=v_{j}(z_{est})+ ({\\vec{b_j}}^T)\\cdot (y_1,y_2,\\dots,y_m).$$\n",
        "\n",
        "- Garantizar que en el punto en  $\\hat{v_j}$ es factible.\n",
        "  $$v_{j}^{\\star}(x,y)=v_{j}(x,y)+ ({\\vec{b_j}}^T)\\cdot (y_1,y_2,\\dots,y_m)+c_j^v\n",
        "  $$\n",
        "\n",
        "- Modificar la función objetivo: \n",
        "$$f^{\\star}(x,y)=f(x,y)+\\vec{bf}y$$\n",
        "\n",
        "--- \n",
        "\n",
        "\n",
        "### Transformaciones en el nivel superior.\n",
        "- Garantizar que el punto es factible en $g_{i}$:\n",
        " $$g_{i}^{\\star}(x,y)=g_{i}(x,y)+c_i^g,$$\n",
        "\n",
        "- Modificar la función objetivo:\n",
        " $$F^{\\star}(x,y)=F(x,y)+\\vec{BF}(x,y)^T.$$\n",
        "\n",
        "---\n",
        "\n",
        "#### Salida del generador:\n",
        "La salida del generador son las funciones:\n",
        "\n",
        "- $F^{\\star}(x,y)$\n",
        "- $f^{\\star}(x,y)$\n",
        "- $g_1^{\\star}(x,y),\\ldots,g_q^{\\star}(x,y)$\n",
        "- $v_1^{\\star}(x,y),\\ldots,v_s^{\\star}(x,y)$\n",
        "\n",
        "\n",
        "--- \n",
        "\n",
        "### Experimentar con problemas prueba\n",
        "\n",
        "1. Seleccionar 5 problemas de cada tipo:\n",
        "    - Lineales\n",
        "    - Cuadráticos\n",
        "    - No Convexos\n",
        "\n",
        "2. Cada problema crear 4 problemas perturbados del tipo:\n",
        "  - C-Estacionario.\n",
        "  - M-Estacionario.\n",
        "  - Fuertemente-Estacionario.\n",
        "  - $\\alpha=0$\n",
        "\n",
        "---\n",
        "\n",
        "3. Computar con los algoritmos de Julia los mínimos por cada problemas perturbado:\n",
        "  - Lineales y Cuadráticos:\n",
        "    Se uso BilevelJuMP:\n",
        "    - Big-M (100,100)  (HiGHS)\n",
        "    - ProductMode (Ipopt)\n",
        "    - SOS1 (SCIP)\n",
        "  - No Convexos:\n",
        "    - Reformulación KKT en JuMP (Ipopt)\n",
        "  \n",
        "---\n",
        "\n",
        "4. Comparar los resultados obtenidos:\n",
        "- Valor de la función objetivo evaluada en el punto estacionario inicial vs el punto óptimo computado por los métodos anteriores.\n",
        "- Velocidad del método\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "\n",
        "# 6.Oponencia\n",
        "\n",
        "---\n",
        "\n",
        "\n",
        "\n",
        "## ¿En qué zonas considera debe intensificarse la experimentación para arribar a resultados más concluyentes?\n",
        "\n",
        "\n",
        "\n",
        "---\n",
        "\n",
        "### Aumentar las dimensiones de los problemas.\n",
        "\n",
        "- Lineales y Cuadráticos.\n",
        "  1. Crear matrices aleatorias.\n",
        "    \t1. Hilbert. \n",
        "      2. Rango Completo.\n",
        "      3. Semidefinida positiva.\n",
        "\n",
        "---\n",
        "\n",
        "### Casos particulares de interés como:\n",
        "\n",
        "  -  Eco Parques Industriales . \n",
        "  - Mercados eléctricos de \"pay-as-bid\".\n",
        "    - No lineales paper de mercados eléctricos de modelo que se esta en desarrollo, que tiene restricciones cuadráticas.\n",
        "\n",
        "  - En modelos de aprendizajes automáticos (Dempe 2020).\n",
        "\n",
        "---\n",
        "\n",
        "## ¿En qué medida considera se cumplieron los objetivos que se plantea el trabajo?\n",
        "\n",
        "- **Objetivo** : desarrollar un generador\n",
        "de problemas que, dado un punto y las funciones que definen un problema de dos\n",
        "niveles, agregarles funciones polinomiales de primer o segundo grado de forma tal\n",
        "que el punto inicial dado sea un punto crítico del problema creado.\n",
        "\n",
        "\n",
        "\n",
        "## Comente un poco acerca de los resultados obtenidos, su alcance e importancia. \n",
        "\n",
        "-  Un caso en el vector de multiplicadores asociados al Langragiano $=0$. \n",
        "  - Puntos críticos no sean aislados.\n",
        "- Garantías convergencia de puntos C-Estacionarios.\n",
        "  - Algoritmos de suavización\n",
        "  - Genera problemas puntos conocidos a los cuales converga\n",
        "\n",
        "- Poner los gráficos de los C, M, Fuerte y alpha  explicar \n",
        "\n",
        "---\n"
      ],
      "id": "79559031"
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3",
      "language": "python",
      "name": "python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}